trigger:
- debug

parameters:
  - name: useCache
    displayName: 'cache vcpkg artifacts?'
    type: boolean
    default: true
  - name: builds
    type: object
    default:
      - name: linux
        imageName: 'ubuntu-18.04'
        extraCmakeArgs: '-DCMAKE_C_COMPILER=gcc-10 -DCMAKE_CXX_COMPILER=g++-10'
      - name: coverage
        imageName: 'ubuntu-18.04'
        extraCmakeArgs: '-DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DHUSTLE_CODE_COVERAGE=ON'
        coverageBuild: true


variables:
  - name: disable.coverage.autogenerate
    value: 'true'

jobs:
  - ${{ each build in parameters.builds }}:
    - job: ${{ build.name }}
      pool:
        vmImage: ${{ build.imageName }}
      steps:
        - template: steps.yml
          parameters:
            uploadCoverage: false
            useCache: ${{parameters.useCache}}
            collectCoverage: ${{ eq(build.coverageBuild, true) }}
            cmakeArgs: ${{ build.extraCmakeArgs }}
           # extr





